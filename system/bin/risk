#!/system/bin/sh
# Risk - Module Magisk - Clean RAM Cache And Foce Stop Application By Category
RED='\033[0;31m'

GREEN='\033[0;32m'

YELLOW='\033[0;33m'

BLUE='\033[0;34m'

NC='\033[0m'
# MIT License
# 
# Copyright (c) 2024 rakarmp
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
EXCLUDED_APPS_FILE="/sdcard/Android/Risk/excluded_apps.txt"
DEVICE_RAM=$(grep "MemTotal" /proc/meminfo | awk '{print $2}')
DEVICE_CPU=$(grep "processor" /proc/cpuinfo | wc -l)
KERNEL=$(uname -a)
MODPATH="/data/adb/modules/riskr"

LMKD_LOW=1001
LMKD_MEDIUM=800
LMKD_CRITICAL=0
LMKD_CRITICAL_UPGRADE=false
LMKD_UPGRADE_PRESSURE=100
LMKD_DOWNGRADE_PRESSURE=100
LMKD_KILL_HEAVIEST_TASK=true

load_excluded_apps() {
    EXCLUDED_APPS=()
    while IFS= read -r line; do
        # Skip lines starting with //
        if ! echo "$line" | grep -q "^//"; then
            EXCLUDED_APPS+=("$line")
        fi
    done < "$EXCLUDED_APPS_FILE"
}

# Load excluded apps
load_excluded_apps

trim() {
    pm trim-caches 999G
    echo 3 > /proc/sys/vm/drop_caches
    echo -e "${GREEN}RAM Cache Cleared${NC}"
}

is_excluded() {
    local app=$1
    for excluded_app in "${EXCLUDED_APPS[@]}"; do
        if [ "$app" == "$excluded_app" ]; then
            return 0
        fi
    done
    return 1
}

lmksed() {
echo "ro.lmk.low=$LMKD_LOW" > $MODPATH/system.prop
echo "ro.lmk.medium=$LMKD_MEDIUM" >> $MODPATH/system.prop
echo "ro.lmk.critical=$LMKD_CRITICAL" >> $MODPATH/system.prop
echo "ro.lmk.critical_upgrade=$LMKD_CRITICAL_UPGRADE" >> $MODPATH/system.prop
echo "ro.lmk.upgrade_pressure=$LMKD_UPGRADE_PRESSURE" >> $MODPATH/system.prop
echo "ro.lmk.downgrade_pressure=$LMKD_DOWNGRADE_PRESSURE" >> $MODPATH/system.prop
echo "ro.lmk.kill_heaviest_task=$LMKD_KILL_HEAVIEST_TASK" >> $MODPATH/system.prop
}

stop_apps() {
    category="$1"
    clear
    echo -e "${YELLOW}Risk Mode: $mode${NC}"
    trim
    echo -e "${YELLOW}Stopping category apps: $category${NC}"

    running_apps=$(pm list packages -3)
    if [ "$category" = "google" ] || [ "$category" = "all" ]; then
        running_apps="$running_apps $(pm list packages | grep 'com.google')"
    fi
    if [ "$category" = "system" ] || [ "$category" = "all" ]; then
        running_apps="$running_apps $(pm list packages -s)"
    fi

    for app in $running_apps; do
        package_name=$(echo "$app" | sed 's/package://')
        if ! is_excluded "$package_name"; then
            echo -e "${RED}Stop $package_name${NC}"
            am force-stop "$package_name"
        else
            echo -e "${BLUE}Skipping $package_name (exception)${NC}"
        fi
    done
    exit 0
}

custom_menu() {
    while true; do
        echo -e "${BLUE}Select the application category you want to stop:${NC}"
        echo "1. Third party applications"
        echo "2. Google Apps"
        echo "3. System applications"
        echo "4. All applications"
        echo "5. Return to main menu"
        printf "Options: "
        read -r choice

        case $choice in
            1)
                stop_apps "third_party"
                ;;
            2)
                stop_apps "google"
                ;;
            3)
                stop_apps "system"
                ;;
            4)
                stop_apps "all"
                ;;
            5)
                clear
                return
                ;;
            *)
                echo -e "${RED}Invalid Selection. Are You Blind?.${NC}"
                ;;
        esac
    done
}

check_lmk_support() {
    if [ ! -d "/sys/module/lowmemorykiller" ]; then
        echo ""
        echo "${RED}Your Kernel Not Support LMK${NC}"
        echo ""
        exit 0
    fi
}

lmkd_menu() {
while true; do
    echo " "
    echo -e "${YELLOW}DEVICE RAM : $DEVICE_RAM${NC}"
    echo -e "${YELLOW}DEVICE CPU. : $DEVICE_CPU${NC}"
    echo " "
        echo -e "${BLUE}LMKD Available Mode:${NC}"
        echo "1. Easy ${YELLOW}(NEED REBOOT)${NC}"
        echo "   Suitable for daily use"
        echo "   which is not too intensive."
        echo "2. Medium ${YELLOW}(NEED REBOOT)${NC}"
        echo "   Suitable for daily use "
        echo "   intensive ones, such as playing games or "
        echo "   use applications that require "
        echo "   high resource."
        echo "3. Hard ${YELLOW}(NEED REBOOT)${NC}"
        echo "   Suitable for very use "
        echo "   intensive, like playing a very game"
        echo "   heavy or using applications that "
        echo "   require very high resources."
        echo "4. Reset LMKD ${YELLOW}(NEED REBOOT)${NC}"
        echo "5. Return to main menu"
        printf "Options: "
        read -r MODE

case $MODE in
  1)
    clear
    sleep 1
    LMKD_LOW=1500
    echo -e "${RED}LMKD LOW SET TO -->  $LMKD_LOW${NC}"
    LMKD_MEDIUM=1000
    echo -e "${RED}LMKD MEDIUM SET TO -->  $LMKD_MEDIUM${NC}"
    LMKD_CRITICAL=0
    echo -e "${RED}LMKD CRITICAL SET TO -->  $LMKD_CRITICAL${NC}"
    LMKD_CRITICAL_UPGRADE=false
    echo -e "${RED}LMKD CRITICAL UPGRADE SET TO -->  $LMKD_CRITICAL_UPGRADE${NC}"
    LMKD_UPGRADE_PRESSURE=50
    echo -e "${RED}LMKD CRITICAL PRESSURE SET TO -->  $LMKD_CRITICAL_PRESSURE${NC}"
    LMKD_DOWNGRADE_PRESSURE=50
    echo -e "${RED}LMKD DOWNGRADE PRESSURE SET TO -->  $LMKD_DOWNGRADE_PRESSURE${NC}"
    LMKD_KILL_HEAVIEST_TASK=false
    echo -e "${RED}LMKD KILL HEAVIEST TASK SET TO -->  $LMKD_KILL_HEAVIEST_TASK${NC}"
    lmksed
    sleep 1
    echo " "
    echo -e "${YELLOW}NEED REBOOT TO APPLY LMKD${NC}"
    echo " "
    exit 0
    ;;
  2)
    clear
    sleep 1
    LMKD_LOW=1001
    echo -e "${RED}LMKD LOW SET TO -->  $LMKD_LOW${NC}"
    LMKD_MEDIUM=800
    echo -e "${RED}LMKD MEDIUM SET TO -->  $LMKD_MEDIUM${NC}"
    LMKD_CRITICAL=0
    echo -e "${RED}LMKD CRITICAL SET TO -->  $LMKD_CRITICAL${NC}"
    LMKD_CRITICAL_UPGRADE=false
    echo -e "${RED}LMKD CRITICAL UPGRADE SET TO -->  $LMKD_CRITICAL_UPGRADE${NC}"
    LMKD_UPGRADE_PRESSURE=100
    echo -e "${RED}LMKD CRITICAL PRESSURE SET TO -->  $LMKD_CRITICAL_PRESSURE${NC}"
    LMKD_DOWNGRADE_PRESSURE=100
    echo -e "${RED}LMKD DOWNGRADE PRESSURE SET TO -->  $LMKD_DOWNGRADE_PRESSURE${NC}"
    LMKD_KILL_HEAVIEST_TASK=true
    echo -e "${RED}LMKD KILL HEAVIEST TASK SET TO -->  $LMKD_KILL_HEAVIEST_TASK${NC}"
    lmksed
    sleep 1
    echo " "
    echo -e "${YELLOW}NEED REBOOT TO APPLY LMKD${NC}"
    echo " "
    exit 0
    ;;
  3)
    clear
    sleep 1
    LMKD_LOW=500
    echo -e "${RED}LMKD LOW SET TO -->  $LMKD_LOW${NC}"
    LMKD_MEDIUM=300
    echo -e "${RED}LMKD MEDIUM SET TO -->  $LMKD_MEDIUM${NC}"
    LMKD_CRITICAL=0
    echo -e "${RED}LMKD CRITICAL SET TO -->  $LMKD_CRITICAL${NC}"
    LMKD_CRITICAL_UPGRADE=true
    echo -e "${RED}LMKD CRITICAL UPGRADE SET TO -->  $LMKD_CRITICAL_UPGRADE${NC}"
    LMKD_UPGRADE_PRESSURE=200
    echo -e "${RED}LMKD CRITICAL PRESSURE SET TO -->  $LMKD_CRITICAL_PRESSURE${NC}"
    LMKD_DOWNGRADE_PRESSURE=200
    echo -e "${RED}LMKD DOWNGRADE PRESSURE SET TO -->  $LMKD_DOWNGRADE_PRESSURE${NC}"
    LMKD_KILL_HEAVIEST_TASK=true
    echo -e "${RED}LMKD KILL HEAVIEST TASK SET TO -->  $LMKD_KILL_HEAVIEST_TASK${NC}"
    lmksed
    sleep 1
    echo " "
    echo -e "${YELLOW}NEED REBOOT TO APPLY LMKD${NC}"
    echo " "
    exit 0
    ;;
  4)
    clear
    rm $MODPATH/system.prop
    touch $MODPATH/system.prop
    sleep 1
    echo " "
    echo -e "${YELLOW}NEED REBOOT TO APPLY LMKD${NC}"
    echo " "
    exit 0
    ;;
  5)
    clear
    return
    ;;
  *)
    echo "Are You Blind?"
    exit 1
    ;;
esac
done
}

set_lmk_minfree() {
    RAM=$(grep MemTotal /proc/meminfo | awk '{print $2}')
    RAM=$((RAM / 1024))  # Konversi ke MB

    case $1 in
        easy)
            echo "${RED}LMK minfree set to easy mode${NC}"
            Front=$((($RAM*1/100)*1024/4))
            Visible=$((($RAM*1/100)*1024/4))
            Second=$((($RAM*3/100)*1024/4))
            Hidden=$((($RAM*6/100)*1024/4))
            content=$((($RAM*7/100)*1024/4))
            empty=$((($RAM*8/100)*1024/4))
            sleep 1
            ;;
        medium)
            echo "${RED}LMK minfree set to medium mode${NC}"
            Front=$((($RAM*2/100)*1024/4))
            Visible=$((($RAM*2/100)*1024/4))
            Second=$((($RAM*4/100)*1024/4))
            Hidden=$((($RAM*7/100)*1024/4))
            content=$((($RAM*8/100)*1024/4))
            empty=$((($RAM*9/100)*1024/4))
            sleep 1
            ;;
        hard)
            echo "${RED}LMK minfree set to hard mode${NC}"
            Front=$((($RAM*3/100)*1024/4))
            Visible=$((($RAM*3/100)*1024/4))
            Second=$((($RAM*5/100)*1024/4))
            Hidden=$((($RAM*8/100)*1024/4))
            content=$((($RAM*9/100)*1024/4))
            empty=$((($RAM*10/100)*1024/4))
            sleep 1
            ;;
        *)
            return
            ;;
    esac

    LMK="/sys/module/lowmemorykiller/parameters"
    chmod +w $LMK/adj
    echo "0,0,235,530,835,1000" > $LMK/adj
    chmod +w $LMK/minfree
    echo "$Front,$Visible,$Second,$Hidden,$content,$empty" > $LMK/minfree
}

lmk_menu() {
while true; do
    echo " "
    echo -e "${YELLOW}DEVICE RAM : $DEVICE_RAM${NC}"
    echo -e "${YELLOW}DEVICE CPU. : $DEVICE_CPU${NC}"
    echo " "
    echo -e "${BLUE}LMK Available Mode:${NC}"
        echo "1. Easy"
        echo "   Suitable for daily use"
        echo "   which is not too intensive."
        echo "2. Medium"
        echo "   Suitable for daily use "
        echo "   intensive ones, such as playing games or "
        echo "   use applications that require "
        echo "   high resource."
        echo "3. Hard"
        echo "   Suitable for very use "
        echo "   intensive, like playing a very game"
        echo "   heavy or using applications that "
        echo "   require very high resources."
        echo "4. Reset LMKD"
        echo "5. Return to main menu"
        printf "Options: "
        read -r choice
    case $choice in
        1)
            set_lmk_minfree easy
            ;;
        2)
            set_lmk_minfree medium
            ;;
        3)
            set_lmk_minfree hard
            ;;
        4)
            echo "Bye Madafaka!"
            exit 0
            ;;
        5)
            clear
            return
            ;;
        *)
            echo "Are You Blind?"
            ;;
    esac
done
}

main_menu() {
    while true; do
    echo " "
echo "${BLUE}╔═══╗───╔╗${NC}"
echo "${BLUE}║╔═╗║───║║${NC}"
echo "${BLUE}║╚═╝╠╦══╣║╔╗${NC}"
echo "${BLUE}║╔╗╔╬╣══╣╚╝╝${NC}"
echo "${BLUE}║║║╚╣╠══║╔╗╗${NC}"
echo "${BLUE}╚╝╚═╩╩══╩╝╚╝ ULTIMATE TOOLS${NC}"
echo " "
echo "${BLUE}KERNEL : ${KERNEL}:${NC}"
echo " "
        echo "${BLUE}Select mode:${NC}"
        echo "1. Safe ${YELLOW}(stop third party apps only)${NC}"
        echo "2. Aggressive ${YELLOW}(stop third party apps and Google)${NC}"
        echo "3. Custom ${YELLOW}(select the application category you want to stop)${NC}"
        echo "4. LMKD Adjusment A10+"
        echo "5. LMK adj,minfree Adjusment (If Your Kernel Support)"
        echo "6. Exit"
        echo "7. Force Exit Termux"
        printf "Options: "
        read -r choice

        case $choice in
            1)
                mode="Safe"
                stop_apps "third_party"
                ;;
            2)
                mode="Aggresive"
                stop_apps "google"
                ;;
            3)
                clear
                custom_menu
                mode="Custom"
                ;;
            4)
                clear
                lmkd_menu
                ;;
            5)
                clear
                check_lmk_support
                lmk_menu
                ;;
            6)
                clear
                echo "Bye, Madafaka...."
                sleep 0.5
                clear
                exit 0
                ;;
            7)
                clear
                echo "Bye, Madafaka...."
                sleep 0.5
                am force-stop com.termux
                
                ;;
            *)
                clear
                echo "${RED}Are You Blind?.${NC}"
                ;;
        esac
    done
}
clear
main_menu
